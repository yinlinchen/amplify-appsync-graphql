interface Object {
  id: ID!
  identifier: String!
  date: String
  description: String
  title: String!
  visibility: Boolean!
  parent_collection: [String!]
}

type Collection implements Object
  @model
  @searchable
  @key(
    name: "Identifier"
    fields: ["identifier"]
    queryField: "collectionByIdentifier"
  ) {
  collection_category: String!
  date: String
  description: String
  id: ID!
  identifier: String!
  parent_collection: [String!]
  title: String!
  visibility: Boolean!
  items: [Item] @connection(name: "CollectionItems")
}

type Item implements Object
  @model
  @searchable
  @key(name: "Identifier", fields: ["identifier"], queryField: "itemByIdentifier") {
  id: ID!
  identifier: String!
  item_category: String!
  date: String
  description: String
  parent_collection: [String!]
  title: String!
  visibility: Boolean!
  collection: Collection @connection(name: "CollectionItems")
}

type Query {
  fuzzySearch(
    keyword: String!
    limit: Int
    nextToken: String
  ): FuzzyObjectConnection
  unionSearch(
    query: String!
  ): UnionSearchResult
  searchObjects(
    sort: SearchableObjectSortInput
    filter: SearchableObjectFilterInput
    keyword: String!
    limit: Int
    nextToken: String
  ): SearchableObjectConnection
  andorSearch(
    category: String!
    limit: Int
    nextToken: String
  ): AndOrSearchObjectConnection
  fulltextCollections(
    allFields: String!
    limit: Int
    nextToken: String
  ): SearchableCollectionConnection
}

union UnionSearchResult = Collection | Item

type AndOrSearchObjectConnection {
  items: [Object]
  nextToken: String
  total: Int
}

type FuzzyObjectConnection {
  items: [Collection]
  nextToken: String
  total: Int
}

type SearchableCollectionConnection {
  items: [Collection]
  nextToken: String
  total: Int
}

type SearchableObjectConnection {
  items: [Object]
  nextToken: String
  total: Int
}

input SearchableObjectFilterInput {
  id: SearchableIDFilterInput
  title: SearchableStringFilterInput
  identifier: SearchableStringFilterInput
  description: SearchableStringFilterInput
  date: SearchableStringFilterInput
  visibility: SearchableBooleanFilterInput
  parent_collection: SearchableStringFilterInput
  and: [SearchableObjectFilterInput]
  or: [SearchableObjectFilterInput]
  not: SearchableObjectFilterInput
}

input SearchableObjectSortInput {
  field: SearchableObjectSortableFields
  direction: SearchableSortDirection
}

enum SearchableObjectSortableFields {
  id
  title
  identifier
  description
  date
}

input SearchableIDFilterInput {
	ne: ID
	gt: ID
	lt: ID
	gte: ID
	lte: ID
	eq: ID
	match: ID
	matchPhrase: ID
	matchPhrasePrefix: ID
	multiMatch: ID
	exists: Boolean
	wildcard: ID
	regexp: ID
	range: [ID]
}

input SearchableStringFilterInput {
	ne: String
	gt: String
	lt: String
	gte: String
	lte: String
	eq: String
	match: String
	matchPhrase: String
	matchPhrasePrefix: String
	multiMatch: String
	exists: Boolean
	wildcard: String
	regexp: String
	range: [String]
}

input SearchableBooleanFilterInput {
	eq: Boolean
	ne: Boolean
}

enum SearchableSortDirection {
	asc
	desc
}
